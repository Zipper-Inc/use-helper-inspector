{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\n\ninterface InspectableComponent {\n  name: string\n  description: string\n}\ninterface HelpModeContextProps {\n  inspectableComponents: InspectableComponents\n  helpModeEnabled: boolean\n  inspectorEnabled: boolean\n  elementDescription: string | null\n  toggleHelpMode: () => void\n  toggleInspectorMode: () => void\n  setElementDescription: (description: string | null) => void\n  hoveredElement: string | null\n  setHoveredElement: React.Dispatch<React.SetStateAction<string | null>>\n}\n\nconst HelpModeContext = createContext<HelpModeContextProps | null>(null)\n\ninterface InspectableComponents {\n  [key: string]: InspectableComponent\n}\n\nexport const useHelpMode = () => {\n  const context = useContext(HelpModeContext)\n  if (context === null) {\n    throw new Error('useHelpMode must be used within a HelpModeProvider')\n  }\n  return context\n}\n\nexport const useHelpBorder = () => {\n  const {\n    helpModeEnabled,\n    hoveredElement,\n    setHoveredElement,\n    setElementDescription,\n    inspectableComponents,\n  } = useHelpMode()\n\n  return {\n    style: (componentName: string) => ({\n      border:\n        helpModeEnabled && hoveredElement === componentName\n          ? '4px solid #E5BEEB'\n          : '4px solid transparent',\n      boxSizing: 'border-box', // to prevent resizing of the elements when border is applied\n    }),\n    onMouseEnter: (componentName: string) => () => {\n      if (helpModeEnabled) {\n        setHoveredElement(componentName)\n        setElementDescription(\n          inspectableComponents[componentName]?.description || null\n        )\n      }\n    },\n    onMouseLeave: () => () => {\n      if (helpModeEnabled) {\n        setHoveredElement(null)\n        setElementDescription(null)\n      }\n    },\n  }\n}\n\ntype HelpModeProviderP = {\n  children: React.ReactNode\n  inspectableComponents: InspectableComponents\n}\nexport const HelpModeProvider = ({\n  children,\n  inspectableComponents,\n}: HelpModeProviderP) => {\n  const [helpModeEnabled, setHelpModeEnabled] = useState<boolean>(false)\n  const [inspectorEnabled, setInspectorEnabled] = useState<boolean>(false)\n  const [elementDescription, setElementDescription] = useState<string | null>(\n    null\n  )\n  const [hoveredElement, setHoveredElement] = useState<string | null>(null)\n\n  const toggleInspectorMode = () => {\n    setInspectorEnabled((prev) => !prev)\n  }\n\n  const justToggledRef = useRef(false)\n\n  function toggleHelpMode() {\n    justToggledRef.current = true\n    setHelpModeEnabled((prev) => !prev)\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (helpModeEnabled && !justToggledRef.current) {\n        toggleHelpMode()\n      }\n      justToggledRef.current = false\n    }\n\n    window.addEventListener('click', handleClickOutside)\n\n    return () => {\n      window.removeEventListener('click', handleClickOutside)\n    }\n  }, [helpModeEnabled])\n\n  return (\n    <HelpModeContext.Provider\n      value={{\n        helpModeEnabled,\n        inspectorEnabled,\n        elementDescription,\n        toggleHelpMode,\n        toggleInspectorMode,\n        setElementDescription,\n        hoveredElement,\n        setHoveredElement,\n        inspectableComponents,\n      }}\n    >\n      {children}\n    </HelpModeContext.Provider>\n  )\n}\n"],"mappings":";AAAA,OAAO;AAAA,EACL;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAkBP,IAAM,kBAAkB,cAA2C,IAAI;AAMhE,IAAM,cAAc,MAAM;AAC/B,QAAM,UAAU,WAAW,eAAe;AAC1C,MAAI,YAAY,MAAM;AACpB,UAAM,IAAI,MAAM,oDAAoD;AAAA,EACtE;AACA,SAAO;AACT;AAEO,IAAM,gBAAgB,MAAM;AACjC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,YAAY;AAEhB,SAAO;AAAA,IACL,OAAO,CAAC,mBAA2B;AAAA,MACjC,QACE,mBAAmB,mBAAmB,gBAClC,sBACA;AAAA,MACN,WAAW;AAAA;AAAA,IACb;AAAA,IACA,cAAc,CAAC,kBAA0B,MAAM;AAvDnD;AAwDM,UAAI,iBAAiB;AACnB,0BAAkB,aAAa;AAC/B;AAAA,YACE,2BAAsB,aAAa,MAAnC,mBAAsC,gBAAe;AAAA,QACvD;AAAA,MACF;AAAA,IACF;AAAA,IACA,cAAc,MAAM,MAAM;AACxB,UAAI,iBAAiB;AACnB,0BAAkB,IAAI;AACtB,8BAAsB,IAAI;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AACF;AAMO,IAAM,mBAAmB,CAAC;AAAA,EAC/B;AAAA,EACA;AACF,MAAyB;AACvB,QAAM,CAAC,iBAAiB,kBAAkB,IAAI,SAAkB,KAAK;AACrE,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAAkB,KAAK;AACvE,QAAM,CAAC,oBAAoB,qBAAqB,IAAI;AAAA,IAClD;AAAA,EACF;AACA,QAAM,CAAC,gBAAgB,iBAAiB,IAAI,SAAwB,IAAI;AAExE,QAAM,sBAAsB,MAAM;AAChC,wBAAoB,CAAC,SAAS,CAAC,IAAI;AAAA,EACrC;AAEA,QAAM,iBAAiB,OAAO,KAAK;AAEnC,WAAS,iBAAiB;AACxB,mBAAe,UAAU;AACzB,uBAAmB,CAAC,SAAS,CAAC,IAAI;AAAA,EACpC;AAEA,YAAU,MAAM;AACd,UAAM,qBAAqB,MAAM;AAC/B,UAAI,mBAAmB,CAAC,eAAe,SAAS;AAC9C,uBAAe;AAAA,MACjB;AACA,qBAAe,UAAU;AAAA,IAC3B;AAEA,WAAO,iBAAiB,SAAS,kBAAkB;AAEnD,WAAO,MAAM;AACX,aAAO,oBAAoB,SAAS,kBAAkB;AAAA,IACxD;AAAA,EACF,GAAG,CAAC,eAAe,CAAC;AAEpB,SACE;AAAA,IAAC,gBAAgB;AAAA,IAAhB;AAAA,MACC,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA;AAAA,IAEC;AAAA,EACH;AAEJ;","names":[]}